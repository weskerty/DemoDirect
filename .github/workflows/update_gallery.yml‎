name: Update Gallery JSON

on:
  push:
    branches: [ main, master ]  # Especifica branches expl√≠citamente
    paths:
      - 'web/Dinamico/**'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'web/Dinamico/**'
  workflow_dispatch:  # Permite ejecuci√≥n manual

permissions:
  contents: write

jobs:
  update-json:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          
      - name: List directory structure
        run: |
          echo "Current directory:"
          pwd
          echo "Repository structure:"
          find . -type d -name ".git" -prune -o -type f -print | head -20
          echo "web/Dinamico structure:"
          if [ -d "web/Dinamico" ]; then
            ls -la web/Dinamico/
          else
            echo "web/Dinamico directory not found"
          fi
          
      - name: Update gallery JSON
        run: |
          python3 << 'EOF'
          import os
          import json
          from pathlib import Path

          def get_files(directory, extensions):
              """Get all files in a directory with specific extensions."""
              try:
                  return sorted([
                      f for f in os.listdir(directory)
                      if os.path.isfile(os.path.join(directory, f)) and os.path.splitext(f)[1].lower() in extensions
                  ])
              except Exception as e:
                  print(f"Error reading directory {directory}: {e}")
                  return []

          def process_gallery(folder_path):
              """Process a single gallery folder inside web/Dinamico."""
              if not os.path.exists(folder_path):
                  print(f"Directory not found: {folder_path}")
                  return []
              
              image_files = get_files(folder_path, {'.jpg', '.jpeg', '.png', '.gif', '.webp'})
              html_files = get_files(folder_path, {'.html', '.md'})
              gallery_items = []
              
              html_file_map = {os.path.splitext(f)[0]: f for f in html_files}
              
              for image_file in image_files:
                  name = os.path.splitext(image_file)[0]
                  html_file = html_file_map.get(name)
                  
                  if html_file:
                      gallery_items.append({
                          "image": f"web/Dinamico/{os.path.basename(folder_path)}/{image_file}",
                          "link": f"web/Dinamico/{os.path.basename(folder_path)}/{html_file}",
                          "name": name
                      })
              
              return gallery_items

          def create_gallery_json():
              """Create the main gallery JSON file scanning all subfolders in web/Dinamico."""
              base_path = Path("web", "Dinamico")
              galleries = {}
              
              if not base_path.exists():
                  print(f"Base directory not found: {base_path}")
                  print(f"Current working directory: {os.getcwd()}")
                  print(f"Available directories: {list(Path('.').iterdir())}")
                  return
              
              for folder in base_path.iterdir():
                  if folder.is_dir():
                      print(f"Processing folder: {folder.name}")
                      galleries[folder.name] = {
                          "images": process_gallery(folder)
                      }
              
              output_file = base_path / 'data.json'
              try:
                  with open(output_file, 'w', encoding='utf-8') as f:
                      json.dump({"galleries": galleries}, f, indent=2, ensure_ascii=False)
                  print(f"JSON file created successfully at: {output_file}")
                  print(f"File size: {output_file.stat().st_size} bytes")
              except Exception as e:
                  print(f"Error creating JSON file: {e}")

          if __name__ == "__main__":
              create_gallery_json()
          EOF
          
      - name: Check for changes
        id: check_changes
        run: |
          if [ -f "web/Dinamico/data.json" ]; then
            echo "data.json exists"
            git add web/Dinamico/data.json
            if git diff --staged --quiet; then
              echo "changes=false" >> $GITHUB_OUTPUT
              echo "No changes to commit"
            else
              echo "changes=true" >> $GITHUB_OUTPUT
              echo "Changes detected"
            fi
          else
            echo "changes=false" >> $GITHUB_OUTPUT
            echo "data.json not found"
          fi
          
      - name: Commit and push changes
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -m "ü§ñ Update gallery data.json [skip ci]"
          git push